https://codepen.io/BlueEagle/pen/NWGXONY?editors=1000

 1. What is Semantic HTML? Semantic HTML is HTML that followed a the w3 standard for markup using more natural human language.
    2. What is HTML used for? It allows developers to use a standard outline and method for writing up documents, just like publishers use standard writing formats.
    It also comes with handy default styling.
    3. What is an attribute and where do we put it? An attribute is a property of an element and is specified in an element's opening tag.
    4. What is the h1 tag used for? How many times should I use it on a page? The h1 tag is for website/document titles and should typically only be used once.
    5. Name two tags that have required attributes: <a>, <img>
    6. What do we put in the head of our HTML document? The head should contain information not viewable to the user, such as metadata the browser uses and SEO information.
    7. What is an id? An id is a unique reference to an element, normally used in scripts. Not recommended for styling purposes.
    8. What elements can I add an id to? Any element can have an id. An example would be an <input> element.
    9. How many times can I use the same id on a page? Only once.
    10. What is a class? A class is a property used to refer to a type or group of elements. In CSS it is often used to add styling to several elements at once.
    11. What elements can I add a class to? Any element can have a class.
    12. How many times can I use the same class on a page? Almost infinitely.
    13. How do I get my link to open in a new tab? Add the following property: target:"_blank".
    14. What is the alt attribute in the image tag used for? Sometimes and image cannot display properly in a browser. In this case, the alt text is displayed.
    It is also beneficial for using screen readers or for SEO.
    15. How do I reference an id? #<id>, where <id> is the id.
    16. What is the difference between a section and a div? A section is for dividing content on a page into large groups. A div is used as a container to hold content together
    in some way. Sections are usually larger than divs.
    17. What is CSS used for? CSS, also known as Cascading Style Sheets are used for writing style specifications to control the appearance of HTML markup. This gives a website
    it's look and feel.
    18. How to we select an element? Example - every h2 on the page. Use the element tag as a selector. In this case, use h2 {} in a CSS stylesheet.
    19. What is the difference between a class and an id? - Give me an example of when I might use each one. Classes should be used for styling in most cases, it can be used
    for a category of items such as blog posts, where each post shares styles. An id usually should not be used for styling but is very useful as a unique reference in scripting
    languages. It is often used for elements like an input that needs to be directly accessed by a script.
    20. How do we select classes in CSS? .<class>, where <class> is the class.
    21. How do we select a p element with a single class of “human””? p.human
    22. What is a parent child selector? When would this be useful? A parent child selector is a selector that selects all children of a parent element that match the child selector.
    Such as, header > h1. It is useful for styling specific elements of a section without selecting the entire section.
    23. How do you select all links within a div with the class of sidebar? div a.sidebar
    24. What is a pseudo selector? A pseudo selector uses a pseudo-class to select elements with a described state. Such as when a mouse hovers over an element.
    25. What do we use to change the spacing between lines? line-height
    26. What do we use to change the spacing between letters? letter-spacing
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize? text-transform: uppercase; text-transform: lowercase; text-transform: capitalize;
    28. How do I add a 1px border around my div that is dotted and black? border: 1px dotted black;
    29. How do I select everything on the page? *
    30. How do I write a comment in CSS? /*comment goes here*/
    31. How do I find out what file I am in, when I am using the command line? pwd
    32. Using the command line - how do I see a list of files/folders in my current folder? ls (although my favorite it ls -la)
    33. How do I remove a file via the command line? Why do I have to be careful with this? rm, it does not prompt the user to confirm whether or not you really want to delete the file.
    34. Why should I use version control? Version control allows you to return to a previous version of a file if you break something. It keeps a history of your files.
    35. How often should I commit to github? Once approximately every twenty minutes, or whenever you make a significant change.
    36. What is the command we would use to push our repo up to github? git push -u origin <branch>, where branch is the branch you are pushing to. In my case this is collin-ballou.
    37. Walk me through Lambda's git flow. Fork the project on Github's website, add your TL as a collaborator for the repo, cd in terminal to where you want your project stored,
    git clone <project-URL> (where <project-URL> is the .git URL for your forked project on GitHub), cd <project-directory> (where <project-directory> is the directory you've just created with git clone),
    git checkout -b <firstName-lastName> (where <firstName is your first name, and lastName> is your last name), make changes as needed, git add .,
    git commit -m "<commit-message>" (where <commit-message> is a short description of what you've changed), git push -u origin <branch> (where branch is the branch you are pushing to),
    on GitHub's website submit a pull reguest and set base repository to your own forked repo, add your TL as a reviewer, leave a comment, and create the pull request.

Stretch Questions

    1. What is the difference between an inline element and a block element? An inline element does not start on a new line and grows to form around the content inside it, it also cannot use width/height properties;
    A block element always starts on a new line and takes up as much much horizontal space as you allow it and grows vertically to form around content inside it.
    2. What happens when an element is positioned absolutely? Positioning an element absolutely places it at a location a set distance relative to it's parent object.
    It otherwise does not respect to position of other objects on the page and sits above them by default.
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? You can set width: min-content so the element will wrap around the content inside it.
    You can later set a specific width if needed.
    4. Name 3 elements that are block elements by default, 2 elements that are display inline by default and 1 element that is display inline-block by default.
    <header>, <section>, and <footer> are all display block by default; <span>, and <a> are both inline elements;
    <img> is an inline-block element with it's adjustable width/height and ability to be placed side by side without new lines.
    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them?
    The box model is a layout that renders each element as a box with specific dimensions, location, and other properties.
    Developers at one time would build these boxes with pixel based dimensions, at a time before mobile devices like smartphones and tablet computers this was mostly acceptable.
    Today developers need to write responsive websites that use relative dimensions and adjust to a variety of screen sizes. 
    One fix is to containerize elements that need to be together and using percentage based dimensions.